[
    {
        "id": "f222cff05c62ff60",
        "type": "tab",
        "label": "Dummy Scanner",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f9fc74821ea183a4",
        "type": "tab",
        "label": "Receive from device",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ecbd6b1f6281af5a",
        "type": "tab",
        "label": "Datetime",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae59162780495ec0",
        "type": "tab",
        "label": "Startup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "457756dc470fc3f0",
        "type": "tab",
        "label": "List Addr",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "578cd3ed36ceeb60",
        "type": "tab",
        "label": "Records",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eb6b0f352e15e08d",
        "type": "mqtt-broker",
        "name": "hiveMQ private",
        "broker": "350fd0725fa14a069e04d387121e69f7.s2.eu.hivemq.cloud",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d4687e765b4d58cd",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cdcd3343ef7525a1",
        "type": "ui_group",
        "name": "Select",
        "tab": "d4687e765b4d58cd",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "300efc65cc866143",
        "type": "mqtt-broker",
        "name": "hiveMQ free",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "849bd61f7fc501af",
        "type": "ui_tab",
        "name": "List",
        "icon": "list",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "19524a9398e9bb7c",
        "type": "ui_group",
        "name": "Records",
        "tab": "849bd61f7fc501af",
        "order": 1,
        "disp": false,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7e1671a5d7023afa",
        "type": "sqlitedb",
        "db": "${DB_PATH}",
        "mode": "RWC"
    },
    {
        "id": "b49b6639dd17147e",
        "type": "ui_group",
        "name": "Select",
        "tab": "59c819e0c987577c",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7381dac1204ca225",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1ebf16ab1620d1a9",
        "type": "global-config",
        "name": "global-config",
        "env": [
            {
                "name": "BOARD_ID",
                "value": "esp32_busengo",
                "type": "str"
            },
            {
                "name": "DB_PATH",
                "value": "C:\\Users\\mirco\\Desktop\\TESTmodbus_scanner.db",
                "type": "str"
            },
            {
                "name": "ERROR_LOG_PATH",
                "value": "C:\\Users\\mirco\\Desktop\\TESTmodbus_scanner_error_log.txt",
                "type": "str"
            },
            {
                "name": "MQTT_TOPIC_DATA",
                "value": "modbus_scanner/data",
                "type": "str"
            },
            {
                "name": "MQTT_TOPIC_DATETIME",
                "value": "modbus_scanner/datetime",
                "type": "str"
            }
        ]
    },
    {
        "id": "59c819e0c987577c",
        "type": "ui_tab",
        "name": "TEST",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "083cad7205d82a78",
        "type": "ui_group",
        "name": "Info",
        "tab": "59c819e0c987577c",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2eb12e30c6f6d247",
        "type": "ui_group",
        "name": "Info",
        "tab": "d4687e765b4d58cd",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "256c6f3db26801b5",
        "type": "ui_spacer",
        "z": "457756dc470fc3f0",
        "name": "spacer",
        "group": "b49b6639dd17147e",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "8b3bcffbde16341d",
        "type": "inject",
        "z": "f222cff05c62ff60",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "744a9af79fdb1269"
            ]
        ]
    },
    {
        "id": "744a9af79fdb1269",
        "type": "function",
        "z": "f222cff05c62ff60",
        "name": "create data",
        "func": "let fn_names = [\"Read_Coil\", \"Read_Discrete_Input\", \"Read_Holding_Registers\", \"Read_Input_Registers\",];\nlet fn_codes = [\"fn_1\", \"fn_2\", \"fn_3\", \"fn_4\",];\nvar count = context.get('count') || 0;\ncount += 1;\ncontext.set('count', count);\nvar timestamp = String(Math.floor(msg.timestamp / 1000));\n\nvar isData = Math.floor(Math.random() * 2);\nif (isData) {\n    var fn_index = Math.floor(Math.random() * 4);\n    var content = Math.floor(Math.random() * 1000);\n\n    msg.payload =  timestamp + \",\";\n    msg.payload += \"0x\" + String(count).padStart(4, '0') + \",\";\n    msg.payload += String(fn_names[fn_index]) + \",\";\n    msg.payload += String(fn_codes[fn_index]) + \",\";\n    msg.payload += String(content);\n}\nelse {\n    msg.payload =  timestamp + \",\";\n    msg.payload += \"0x\" + String(count).padStart(4, '0') + \",\";\n    msg.payload += \"NO_NEW_DATA,\\n\";\n    msg.payload += \"Addr:\" + \"0x\" + String(count).padStart(4, '0');\n    msg.payload +=  \"-Read_Coil-Illegal address\\n\";\n    msg.payload += \"Addr:\" + \"0x\" + String(count).padStart(4, '0');\n    msg.payload += \"-Read_Discrete_Input-Illegal address\\n\";\n    msg.payload += \"Addr:\" + \"0x\" + String(count).padStart(4, '0');\n    msg.payload += \"-Read_Holding_Registers-Illegal address\\n\";\n    msg.payload += \"Addr:\" + \"0x\" + String(count).padStart(4, '0');\n    msg.payload += \"-Read_Input_Registers-Illegal address\\n\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "8a73cb5742c72358",
                "f1400404f406ca0c"
            ]
        ]
    },
    {
        "id": "8a73cb5742c72358",
        "type": "debug",
        "z": "f222cff05c62ff60",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "f1400404f406ca0c",
        "type": "mqtt out",
        "z": "f222cff05c62ff60",
        "name": "",
        "topic": "${MQTT_TOPIC_DATA}",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "300efc65cc866143",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "0fc418d3e8215aed",
        "type": "mqtt in",
        "z": "f9fc74821ea183a4",
        "name": "",
        "topic": "${MQTT_TOPIC_DATA}",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "300efc65cc866143",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "04c528cc642dc953",
                "24b3d43882f9aeb2",
                "22f27e8b2459f8bd",
                "b948075981196c49"
            ]
        ]
    },
    {
        "id": "04c528cc642dc953",
        "type": "debug",
        "z": "f9fc74821ea183a4",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "24b3d43882f9aeb2",
        "type": "switch",
        "z": "f9fc74821ea183a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "NO_NEW_DATA",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "2582cf641c638ab7",
                "fac4efe00feed4df"
            ],
            [
                "76e478013546d806",
                "ce088e785d2ca531",
                "bd1cf3cddf5c0c08"
            ]
        ]
    },
    {
        "id": "2582cf641c638ab7",
        "type": "debug",
        "z": "f9fc74821ea183a4",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 260,
        "wires": []
    },
    {
        "id": "76e478013546d806",
        "type": "debug",
        "z": "f9fc74821ea183a4",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "79277f275a52ed57",
        "type": "ui_text",
        "z": "f9fc74821ea183a4",
        "group": "083cad7205d82a78",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 740,
        "y": 160,
        "wires": []
    },
    {
        "id": "726f14dec436486c",
        "type": "ui_text",
        "z": "f9fc74821ea183a4",
        "group": "083cad7205d82a78",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last seen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "b948075981196c49",
        "type": "function",
        "z": "f9fc74821ea183a4",
        "name": "parse addr",
        "func": "let current_addr = msg.payload.split(\",\");\nif(current_addr[1]){\n    msg.payload = current_addr[1];\n} else{\n    msg.payload = \"-\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 160,
        "wires": [
            [
                "79277f275a52ed57"
            ]
        ]
    },
    {
        "id": "ce088e785d2ca531",
        "type": "csv",
        "z": "f9fc74821ea183a4",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,address,function_name,function_code,content",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": "",
        "x": 510,
        "y": 380,
        "wires": [
            [
                "e308c55e602918ae"
            ]
        ]
    },
    {
        "id": "3d807768d53963f9",
        "type": "sqlite",
        "z": "f9fc74821ea183a4",
        "mydb": "7e1671a5d7023afa",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e308c55e602918ae",
        "type": "template",
        "z": "f9fc74821ea183a4",
        "name": "INSERT INTO board_id",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO\n    {{env.BOARD_ID}}\nVALUES\n({{payload.timestamp}},\n\"{{payload.address}}\",\n\"{{payload.function_name}}\",\n\"{{payload.function_code}}\",\n{{payload.content}});",
        "output": "str",
        "x": 690,
        "y": 380,
        "wires": [
            [
                "3d807768d53963f9"
            ]
        ]
    },
    {
        "id": "22f27e8b2459f8bd",
        "type": "function",
        "z": "f9fc74821ea183a4",
        "name": "parse datetime",
        "func": "let current_addr = msg.payload.split(\",\");\nif(current_addr[0]){\n    var date = new Date(current_addr[0] * 1000);\n    var lastseen = \"\" + ((date.getHours() < 10 ? '0' : '') + date.getHours()) + \":\" +\n        ((date.getMinutes() < 10 ? '0' : '') + date.getMinutes()) + \":\" +\n        ((date.getSeconds() < 10 ? '0' : '') + date.getSeconds()) + \" \" +\n        ((date.getDate() < 10 ? '0' : '') + date.getDate()) + \"/\" +\n        (((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)) + \"/\" +\n        date.getFullYear();\n    msg.payload = lastseen;\n} else{\n    msg.payload = \"-\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "726f14dec436486c"
            ]
        ]
    },
    {
        "id": "fac4efe00feed4df",
        "type": "function",
        "z": "f9fc74821ea183a4",
        "name": "parse error",
        "func": "let current_addr = msg.payload.split(\",\");\nif(current_addr[3]){\n    msg.payload = current_addr[0] + \"\\n\" + current_addr[3];\n} else{\n    msg.payload = \"\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 220,
        "wires": [
            [
                "51bd376b75f6bfc4"
            ]
        ]
    },
    {
        "id": "51bd376b75f6bfc4",
        "type": "file",
        "z": "f9fc74821ea183a4",
        "name": "",
        "filename": "${ERROR_LOG_PATH}",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bd1cf3cddf5c0c08",
        "type": "link out",
        "z": "f9fc74821ea183a4",
        "name": "new content",
        "mode": "link",
        "links": [
            "d33bc9e4c30a946e",
            "5761cc2bcca06c0e"
        ],
        "x": 475,
        "y": 420,
        "wires": []
    },
    {
        "id": "d64597154a643a0e",
        "type": "inject",
        "z": "ecbd6b1f6281af5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "603e0773bd404ddf",
                "fcb29947d09868e3"
            ]
        ]
    },
    {
        "id": "603e0773bd404ddf",
        "type": "debug",
        "z": "ecbd6b1f6281af5a",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "6920277f6fd068ee",
        "type": "mqtt out",
        "z": "ecbd6b1f6281af5a",
        "name": "",
        "topic": "${MQTT_TOPIC_DATETIME}",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "300efc65cc866143",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "fcb29947d09868e3",
        "type": "function",
        "z": "ecbd6b1f6281af5a",
        "name": "timestamp from ms to s",
        "func": "msg.payload = Math.round(msg.payload / 1000);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "6920277f6fd068ee"
            ]
        ]
    },
    {
        "id": "3c1a342135abe490",
        "type": "ui_button",
        "z": "ecbd6b1f6281af5a",
        "name": "",
        "group": "083cad7205d82a78",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update Datetime",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "fcb29947d09868e3"
            ]
        ]
    },
    {
        "id": "7b570af3410e2533",
        "type": "inject",
        "z": "ae59162780495ec0",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "c1a262d072440302",
                "499e1d9a3b132622"
            ]
        ]
    },
    {
        "id": "c1a262d072440302",
        "type": "template",
        "z": "ae59162780495ec0",
        "name": "CREATE TABLE board_id",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE IF NOT EXISTS\n    {{env.BOARD_ID}}\n(timestamp INTEGER, address TEXT, fn_name TEXT, fn_code TEXT, content INTEGER);",
        "output": "str",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "840ad47a2838526f"
            ]
        ]
    },
    {
        "id": "0ffbd6980947dbe2",
        "type": "template",
        "z": "ae59162780495ec0",
        "name": "DROP TABLE board_id",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE \n    {{env.BOARD_ID}};",
        "output": "str",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "840ad47a2838526f"
            ]
        ]
    },
    {
        "id": "1db7db2b9b8b64b1",
        "type": "inject",
        "z": "ae59162780495ec0",
        "name": "Drop",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "0ffbd6980947dbe2"
            ]
        ]
    },
    {
        "id": "840ad47a2838526f",
        "type": "sqlite",
        "z": "ae59162780495ec0",
        "mydb": "7e1671a5d7023afa",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 610,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "499e1d9a3b132622",
        "type": "link out",
        "z": "ae59162780495ec0",
        "name": "startup",
        "mode": "link",
        "links": [
            "09932e8068bc0314",
            "5761cc2bcca06c0e"
        ],
        "x": 315,
        "y": 60,
        "wires": []
    },
    {
        "id": "0a5fd8691c245ee8",
        "type": "inject",
        "z": "457756dc470fc3f0",
        "name": "Refresh",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "e9ecc55360dc3542"
            ]
        ]
    },
    {
        "id": "fc09fc3c383ed1b4",
        "type": "sqlite",
        "z": "457756dc470fc3f0",
        "mydb": "7e1671a5d7023afa",
        "sqlquery": "msg.topic",
        "sql": "SELECT DISTINCT\n    address\nFROM\n    $BOARD_ID\nORDER BY\n    address ASC;",
        "name": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "0881066b3dfe0328"
            ]
        ]
    },
    {
        "id": "0881066b3dfe0328",
        "type": "function",
        "z": "457756dc470fc3f0",
        "name": "set dropdown",
        "func": "msg.options = [];\nfor (let index = 0; index < msg.payload.length; index++) {\n    const addr = msg.payload[index].address;\n    msg.options.push(addr);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "38a66270daaa39ec"
            ]
        ]
    },
    {
        "id": "38a66270daaa39ec",
        "type": "ui_dropdown",
        "z": "457756dc470fc3f0",
        "name": "",
        "label": "Address:",
        "tooltip": "",
        "place": "Select option",
        "group": "b49b6639dd17147e",
        "order": 1,
        "width": 7,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 460,
        "y": 220,
        "wires": [
            [
                "61a1fc5343577b5f"
            ]
        ]
    },
    {
        "id": "61a1fc5343577b5f",
        "type": "change",
        "z": "457756dc470fc3f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedAddress",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 220,
        "wires": [
            [
                "eaa85f78473dc59c"
            ]
        ]
    },
    {
        "id": "dd5a4b44bff2cb07",
        "type": "sqlite",
        "z": "457756dc470fc3f0",
        "mydb": "7e1671a5d7023afa",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 490,
        "y": 380,
        "wires": [
            [
                "886413337e75aaea",
                "57acaf6b786da971"
            ]
        ]
    },
    {
        "id": "eaa85f78473dc59c",
        "type": "template",
        "z": "457756dc470fc3f0",
        "name": "SELECT by address",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    fn_name,timestamp,content\nFROM\n    {{env.BOARD_ID}}\nWHERE\n    address=\"{{global.selectedAddress}}\"\nORDER BY\n    timestamp DESC;",
        "output": "str",
        "x": 300,
        "y": 380,
        "wires": [
            [
                "dd5a4b44bff2cb07"
            ]
        ]
    },
    {
        "id": "90f545e84471cc0a",
        "type": "ui_table",
        "z": "457756dc470fc3f0",
        "group": "b49b6639dd17147e",
        "name": "",
        "order": 4,
        "width": "12",
        "height": "10",
        "columns": [
            {
                "field": "fn_name",
                "title": "fn_name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "timestamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "content",
                "title": "content",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 830,
        "y": 380,
        "wires": []
    },
    {
        "id": "886413337e75aaea",
        "type": "debug",
        "z": "457756dc470fc3f0",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 340,
        "wires": []
    },
    {
        "id": "09932e8068bc0314",
        "type": "link in",
        "z": "457756dc470fc3f0",
        "name": "read db",
        "links": [
            "499e1d9a3b132622"
        ],
        "x": 145,
        "y": 80,
        "wires": [
            [
                "e9ecc55360dc3542"
            ]
        ]
    },
    {
        "id": "e9ecc55360dc3542",
        "type": "template",
        "z": "457756dc470fc3f0",
        "name": "SELECT DISTINCT addr",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT DISTINCT\n    address\nFROM\n    {{env.BOARD_ID}}\nORDER BY\n    address ASC;",
        "output": "str",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "fc09fc3c383ed1b4"
            ]
        ]
    },
    {
        "id": "57acaf6b786da971",
        "type": "function",
        "z": "457756dc470fc3f0",
        "name": "parse datetime",
        "func": "for (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    var date = new Date(element.timestamp * 1000);\n    var humanDate = \"\" + ((date.getHours() < 10 ? '0' : '') + date.getHours()) + \":\" +\n        ((date.getMinutes() < 10 ? '0' : '') + date.getMinutes()) + \":\" +\n        ((date.getSeconds() < 10 ? '0' : '') + date.getSeconds()) + \" \" +\n        ((date.getDate() < 10 ? '0' : '') + date.getDate()) + \"/\" +\n        (((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)) + \"/\" +\n        date.getFullYear();\n    msg.payload[index].timestamp = humanDate;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 380,
        "wires": [
            [
                "90f545e84471cc0a"
            ]
        ]
    },
    {
        "id": "36d7447fc17036a0",
        "type": "ui_button",
        "z": "457756dc470fc3f0",
        "name": "",
        "group": "b49b6639dd17147e",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Refresh address",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "e9ecc55360dc3542"
            ]
        ]
    },
    {
        "id": "d33bc9e4c30a946e",
        "type": "link in",
        "z": "457756dc470fc3f0",
        "name": "update select",
        "links": [
            "bd1cf3cddf5c0c08"
        ],
        "x": 145,
        "y": 400,
        "wires": [
            [
                "eaa85f78473dc59c"
            ]
        ]
    },
    {
        "id": "5761cc2bcca06c0e",
        "type": "link in",
        "z": "578cd3ed36ceeb60",
        "name": "update Records",
        "links": [
            "499e1d9a3b132622",
            "bd1cf3cddf5c0c08"
        ],
        "x": 165,
        "y": 60,
        "wires": [
            [
                "270e1401e327e368"
            ]
        ]
    },
    {
        "id": "270e1401e327e368",
        "type": "template",
        "z": "578cd3ed36ceeb60",
        "name": "SELECT *",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT DISTINCT\n    address\nFROM\n    {{env.BOARD_ID}}\nORDER BY\n    address\nASC;",
        "output": "str",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "9209c573715b6a8b"
            ]
        ]
    },
    {
        "id": "9209c573715b6a8b",
        "type": "sqlite",
        "z": "578cd3ed36ceeb60",
        "mydb": "7e1671a5d7023afa",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "fb17612a3183d71d"
            ]
        ]
    },
    {
        "id": "6b9d2fe45aa4df91",
        "type": "ui_table",
        "z": "578cd3ed36ceeb60",
        "group": "19524a9398e9bb7c",
        "name": "Records",
        "order": 3,
        "width": "22",
        "height": "15",
        "columns": [
            {
                "field": "address",
                "title": "address",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "t1",
                "title": "R1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "r1",
                "title": "R1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "t2",
                "title": "R2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "r2",
                "title": "R2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "t3",
                "title": "R3",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "r3",
                "title": "R3",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "t4",
                "title": "R4",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "r4",
                "title": "R4",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "t5",
                "title": "R5",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "r5",
                "title": "R5",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 780,
        "y": 240,
        "wires": []
    },
    {
        "id": "e23e0f2edd73a1ec",
        "type": "function",
        "z": "578cd3ed36ceeb60",
        "name": "format data",
        "func": "let query = \"SELECT timestamp,content FROM \" + env.get(\"BOARD_ID\");\nquery += \" WHERE address=\\\"\" + msg.payload.address;\nquery += \"\\\" ORDER BY timestamp DESC;\";\n\nmsg.topic = query;\nmsg.address = msg.payload.address;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            [
                "99f0238d9664707f"
            ]
        ]
    },
    {
        "id": "99f0238d9664707f",
        "type": "sqlite",
        "z": "578cd3ed36ceeb60",
        "mydb": "7e1671a5d7023afa",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "cfc69383b801a64f"
            ]
        ]
    },
    {
        "id": "a0b7cf0b0a4e3a65",
        "type": "split",
        "z": "578cd3ed36ceeb60",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 60,
        "wires": [
            [
                "e23e0f2edd73a1ec"
            ]
        ]
    },
    {
        "id": "cfc69383b801a64f",
        "type": "function",
        "z": "578cd3ed36ceeb60",
        "name": "format row",
        "func": "let row = {\n    address: msg.address\n};\nfor (let index = 0; index < msg.payload.length; index++) {\n    const record = msg.payload[index];\n    const time = \"t\" + (index +1);\n    const rec = \"r\" + (index + 1);\n    var date = new Date(record.timestamp * 1000);\n    var humanDate = \"\" + ((date.getHours() < 10 ? '0' : '') + date.getHours()) + \":\" +\n        ((date.getMinutes() < 10 ? '0' : '') + date.getMinutes()) + \":\" +\n        ((date.getSeconds() < 10 ? '0' : '') + date.getSeconds()) + \" \" +\n        ((date.getDate() < 10 ? '0' : '') + date.getDate()) + \"/\" +\n        (((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)) + \"/\" +\n        date.getFullYear();\n    row[time] = humanDate;\n    row[rec] = record.content; \n}\n\nmsg.payload = row;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "086b3abd458cf9c1"
            ]
        ]
    },
    {
        "id": "0b6ae44479afd536",
        "type": "ui_button",
        "z": "578cd3ed36ceeb60",
        "name": "",
        "group": "19524a9398e9bb7c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "270e1401e327e368"
            ]
        ]
    },
    {
        "id": "086b3abd458cf9c1",
        "type": "join",
        "z": "578cd3ed36ceeb60",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "6b9d2fe45aa4df91"
            ]
        ]
    },
    {
        "id": "fb17612a3183d71d",
        "type": "switch",
        "z": "578cd3ed36ceeb60",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 80,
        "wires": [
            [
                "a0b7cf0b0a4e3a65"
            ],
            [
                "6b9d2fe45aa4df91"
            ]
        ]
    }
]